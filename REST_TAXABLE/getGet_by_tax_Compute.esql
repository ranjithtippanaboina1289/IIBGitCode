

CREATE COMPUTE MODULE getGet_by_tax_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;



	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		DECLARE inRef REFERENCE TO InputLocalEnvironment.HTTP.Input.QueryString;
--		DECLARE taxx FLOAT;
--		SET taxx=inRef.tax;
--		DECLARE query CHARACTER 'select * from taxable where tax=?';
--		SET OutputRoot.JSON.Data.OUTPUT=PASSTHRU(query.RAANDB Values(taxx));
--		IF SQLCODE=0 THEN
--			SET OutputRoot.JSON.Data.OUT='SELECTED RECORDS';
--		ELSE
--			SET OutputRoot.JSON.Data.OUT='NO SELECTED RECORDS';
--		END IF;

	DECLARE len INTEGER;
DECLARE tx FLOAT;
		DECLARE repl_id,message_id,app_name,msg_flow_name,trans_status,req,res,host_req,host_res CHARACTER;
		DECLARE req_stamp,res_stamp CHARACTER;
	
		DECLARE my_rply_ref REFERENCE TO InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		
		SET repl_id = my_rply_ref;
		
		SET app_name = ApplicationLabel;
		SET msg_flow_name = MessageFlowLabel;
		SET req_stamp = CURRENT_TIMESTAMP;
		
		
		
		DECLARE inref REFERENCE TO InputLocalEnvironment.HTTP.Input.QueryString;
		
		SET tx = inref.TAX;
		SET req='tax='||cast(tx AS CHARACTER);
		SET message_id = CAST(repl_id AS CHARACTER);
		
		
		DECLARE Qwery CHARACTER 'SELECT *FROM TAXABLE WHERE TAX=?';
		SET host_req = Qwery;
		
		SET OutputRoot.JSON.Data.OUTPUT = PASSTHRU(Qwery.RANDB VALUES(tx));
		
		SET len = CARDINALITY(OutputRoot.JSON.Data.OUTPUT[]);
		IF len = 0 THEN
			SET OutputRoot.JSON.Data.OUTPUT.resp = 'No record Found with the Data you have given';
			SET trans_status = 'SUCCESS';
			SET res_stamp = CURRENT_TIMESTAMP;
			SET res = 'No data matched with request'; 
			SET host_res = 'checked Database';
		ELSE
			SET OutputRoot.JSON.Data.OUTPUT.resp = 'Fetched data sucessfully';
			SET trans_status = 'SUCCESS';
			
			SET res = CAST(ASBITSTREAM(OutputRoot.JSON.Data.OUTPUT) AS CHARACTER CCSID 1208);
			SET res_stamp = CURRENT_TIMESTAMP;
			SET host_res = 'checked Database';
			
		END IF;
		
		CALL my_db_procedure6(message_id,app_name,msg_flow_name,req,host_req,host_res,res,trans_status,req_stamp,res_stamp);
	END;
END MODULE;
CREATE PROCEDURE my_db_procedure6(IN message_id CHARACTER,IN app_name CHARACTER,IN msg_flow_name CHARACTER,IN req CHARACTER,IN host_req CHARACTER,IN host_res CHARACTER,IN res CHARACTER,IN trans_status CHARACTER,IN req_stamp CHARACTER,IN res_stamp CHARACTER)
			LANGUAGE DATABASE
			EXTERNAL NAME "DB_TAX_PROC";
